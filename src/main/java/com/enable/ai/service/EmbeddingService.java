package com.enable.ai.service;

import org.springframework.stereotype.Service;

import java.util.List;

/**
 * Service for generating text embeddings
 * This is a simple mock implementation. In production, you would integrate with
 * OpenAI, Sentence Transformers, or other embedding models.
 */
@Service
public class EmbeddingService {

    private static final int EMBEDDING_DIMENSION = 768; // Common dimension for many models

    /**
     * Generate embedding vector for the given text
     * This is a mock implementation - replace with actual embedding model
     */
    public List<Float> generateEmbedding(String text) {
        // Mock implementation: generate random embeddings
        // In production, replace this with actual embedding model calls
        java.util.Random random = new java.util.Random(text.hashCode()); // Use text hashcode as seed for consistent results
        return java.util.stream.IntStream.range(0, EMBEDDING_DIMENSION)
                .mapToObj(i -> random.nextFloat() * 2 - 1) // Random float between -1 and 1
                .toList();
    }

    /**
     * Get the dimension of embeddings generated by this service
     */
    public int getEmbeddingDimension() {
        return EMBEDDING_DIMENSION;
    }
}
